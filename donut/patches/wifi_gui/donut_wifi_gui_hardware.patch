diff --git a/wifi/wifi.c b/wifi/wifi.c
old mode 100644
new mode 100755
index ae82efe..3365f0d
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -49,10 +49,12 @@ static char iface[PROPERTY_VALUE_MAX];
 // sockets is in
 
 #ifndef WIFI_DRIVER_MODULE_PATH
-#define WIFI_DRIVER_MODULE_PATH         "/system/lib/modules/wlan.ko"
+#define WIFI_SDIO_IF_DRIVER_MODULE_PATH         "/system/lib/modules/librasdioif.ko"
+#define WIFI_DRIVER_MODULE_PATH         "/system/lib/modules/libra.ko"
 #endif
 #ifndef WIFI_DRIVER_MODULE_NAME
-#define WIFI_DRIVER_MODULE_NAME         "wlan"
+#define WIFI_SDIO_IF_DRIVER_MODULE_NAME "librasdioif"
+#define WIFI_DRIVER_MODULE_NAME         "libra"
 #endif
 #ifndef WIFI_DRIVER_MODULE_ARG
 #define WIFI_DRIVER_MODULE_ARG          ""
@@ -60,12 +62,14 @@ static char iface[PROPERTY_VALUE_MAX];
 #ifndef WIFI_FIRMWARE_LOADER
 #define WIFI_FIRMWARE_LOADER		""
 #endif
-#define WIFI_TEST_INTERFACE		"sta"
+#define WIFI_TEST_INTERFACE		"wlan0"
 
 static const char IFACE_DIR[]           = "/data/system/wpa_supplicant";
 static const char DRIVER_MODULE_NAME[]  = WIFI_DRIVER_MODULE_NAME;
+static const char DRIVER_SDIO_IF_MODULE_NAME[]  = WIFI_SDIO_IF_DRIVER_MODULE_NAME;
 static const char DRIVER_MODULE_TAG[]   = WIFI_DRIVER_MODULE_NAME " ";
 static const char DRIVER_MODULE_PATH[]  = WIFI_DRIVER_MODULE_PATH;
+static const char DRIVER_SDIO_IF_MODULE_PATH[]  = WIFI_SDIO_IF_DRIVER_MODULE_PATH;
 static const char DRIVER_MODULE_ARG[]   = WIFI_DRIVER_MODULE_ARG;
 static const char FIRMWARE_LOADER[]     = WIFI_FIRMWARE_LOADER;
 static const char DRIVER_PROP_NAME[]    = "wlan.driver.status";
@@ -173,11 +177,19 @@ int wifi_load_driver()
         return 0;
     }
 
+    if (insmod(DRIVER_SDIO_IF_MODULE_PATH, DRIVER_MODULE_ARG) < 0)
+        return -1;
+
+    usleep(2000000);
+
+    LOGE("****Loaded librasdioif.ko successfully****\n");
     if (insmod(DRIVER_MODULE_PATH, DRIVER_MODULE_ARG) < 0)
         return -1;
 
+    LOGE("****Loaded libra.ko successfully****\n");
     if (strcmp(FIRMWARE_LOADER,"") == 0) {
         usleep(500000);
+
         property_set(DRIVER_PROP_NAME, "ok");
     }
     else {
@@ -208,7 +220,17 @@ int wifi_unload_driver()
     	    usleep(500000);
 	}
 	if (count) {
-    	    return 0;
+            count = 20;
+            if (rmmod(DRIVER_SDIO_IF_MODULE_NAME) == 0) {
+ 	        while (count-- > 0) {
+	            if (!check_driver_loaded())
+		        break;
+    	            usleep(500000);
+	        }
+            }
+            if(count) {
+    	        return 0;
+            }
 	}
 	return -1;
     } else
